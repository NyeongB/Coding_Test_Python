string = ["a", "ab", "abc"]

for i in string :
    print(hash(i))

>>  -4600563812084320951
    -9018392627289975125
    6234468088255173602


완전 고유한 값이 나옴 

##############################

result[a] = result.get(a, 0) + 1
딕셔너리에 저장할때 있으면 a의 밸류가 나오고 없으면 0이 나옴

a.keys()
a.values()
a.items()   # 전부 리스트로 반환됨

a[2] = "2" # 2라는 키값에 "2"라는 밸류 넣음

#################################################3

s = set([1,2,3])
s2 = set("hello")

set에 인덱스로 접근하려면 리스트나 튜플로 변경한 후 에 접근 가능

answer = 0

def check():
    global answer   #글로벌있어야지만 전역변수 컨트롤 가능
    answer +=1

check()
print(answer)
##############################################

a = [1,2,3]
b = a[:]    # 이렇게 안하면 주소값 복사라 참조변수만 다른 완전 동일한 메모리를 가르킴
b = copy(a)

##############################################
리스트를 문자열로 
a = ["ab","cd","ef"]

s = ":".join(a)
print(s)

##############################################
print('j' not in 'python')

print(1 in [2,3,4,5]) # 있나 없나 체크 가능

##############################################
a = [1,2,3,4]

result = [n * 3 for n in a if n % 2]
print(result)

print([x * y for x in range(2,10) 
        for y in range(1,10)])      # 리스트 내포 사용하기